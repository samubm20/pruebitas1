name : third
on : 
  release:
    types: [created]
  workflow_dispatch:
jobs:
    publish_in_dockerhub:
        runs-on: ubuntu-20.04
        steps:
          - name: Clone repository
            uses: actions/checkout@v2
          - name: Download Jar from previous job
            uses: actions/download-artifact@v1
            with:
              name: target
          - name: Generate tag
            run: echo ::set-output name=tag::$(mvn -q help:evaluate -Dexpression=project.version -DforceStdout)
            id: project
          - name: Login to DockerHub
            run: docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
          - name: Build image
            run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/webapp:${{ steps.project.outputs.tag }} .
          - name: Push image to DockerHub
            run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/webapp:${{ steps.project.outputs.tag}}
            
    publish_in_heroku_registry:
        name: Publish in Heroku Registry
        runs-on: ubuntu-20.04
        needs: [publish_in_dockerhub]
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP: ${{ secrets.HEROKU_APP }}
        steps:   
          - name: Clone repository
            uses: actions/checkout@v2
          - name: Download Jar from previous job
            uses: actions/download-artifact@v1
            with:
              name: target
          - name: Build Docker Image
            run: docker build -t webapp .   
          - name: Install Heroku CLI
            run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh   
          - name: Change image name to point to Heroku registry
            run: docker tag webapp registry.heroku.com/$HEROKU_APP/web   
          - name: Login in Heroku container registry
            run: heroku container:login   
          - name: Push image to Heroku Registry
            run: docker push registry.heroku.com/$HEROKU_APP/web